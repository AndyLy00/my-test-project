import {
  Transition,
  TransitionGroup,
  createBlock,
  defineComponent,
  mergeProps,
  openBlock,
  renderSlot,
  resolveDynamicComponent,
  unref,
  withCtx
} from "./chunk-BHOUGBEC.js";

// node_modules/@noction/vue-bezier/dist/vue-bezier.mjs
var y = (o) => o.group ? TransitionGroup : Transition;
var g = () => [
  "after-enter",
  "after-leave",
  "before-enter",
  "before-leave",
  "leave"
];
var D = (o, n) => {
  var l, r;
  const e = ((l = o.duration) == null ? void 0 : l.enter) ?? o.duration ?? 0, a = ((r = o.delay) == null ? void 0 : r.enter) ?? o.delay ?? 0;
  n.style.animationDuration = `${e}ms`, n.style.animationDelay = `${a}ms`, S(o, n);
};
var w = (o, n) => {
  var l, r;
  const e = ((l = o.duration) == null ? void 0 : l.leave) ?? o.duration ?? 0, a = ((r = o.delay) == null ? void 0 : r.leave) ?? o.delay ?? 0;
  n.style.animationDuration = `${e}ms`, n.style.animationDelay = `${a}ms`, S(o, n);
};
var F = (o, n) => {
  Object.keys(o.styles).forEach((e) => {
    o.styles[e] && (n.style[e] = "");
  }), n.style.animationDuration = "", n.style.animationDelay = "";
};
var P = (o, n, e) => {
  var r, s;
  O(o, n);
  const a = ((r = o.duration) == null ? void 0 : r.leave) ?? o.duration ?? 0, l = ((s = o.delay) == null ? void 0 : s.leave) ?? o.delay ?? 0;
  setTimeout(e, a + l);
};
var S = (o, n) => {
  Z(o, n), Object.keys(o.styles).forEach((e) => {
    const a = o.styles[e];
    a && (n.style[e] = a);
  });
};
var O = (o, n) => {
  o.group && (n.style.position = "absolute");
};
var Z = (o, n) => {
  o.origin && (n.style.transformOrigin = o.origin);
};
var h = (o, n) => ({
  onAfterEnter: (e) => {
    F(o, e), n("after-enter", e);
  },
  onAfterLeave: (e) => {
    F(o, e), n("after-leave", e);
  },
  onBeforeEnter: (e) => {
    D(o, e), n("before-enter", e);
  },
  onBeforeLeave: (e) => {
    w(o, e), n("before-leave", e);
  },
  onLeave: (e, a) => {
    P(o, e, a), n("leave", e, a);
  }
});
var A = {
  /**
   * Transition delay. Number for specifying the same delay for enter/leave transitions
   * Object style {enter: 300, leave: 300} for specifying explicit durations for enter/leave
   */
  delay: {
    default: 0,
    type: [Number, Object]
  },
  /**
   * Transition duration. Number for specifying the same duration for enter/leave transitions
   * Object style {enter: 300, leave: 300} for specifying explicit durations for enter/leave
   */
  duration: {
    default: 300,
    type: [Number, Object]
  },
  /**
   * Whether the component should be a `transition-group` component.
   */
  group: Boolean,
  /**
   *  Transform origin property https://tympanus.net/codrops/css_reference/transform-origin/.
   *  Can be specified with styles as well but it's shorter with this prop
   */
  origin: {
    default: "",
    type: String
  },
  /**
   * Element styles that are applied during transition. These styles are applied on @beforeEnter and @beforeLeave hooks
   */
  styles: {
    default: () => ({
      animationFillMode: "both",
      animationTimingFunction: "ease-out"
    }),
    type: Object
  },
  /**
   * Transition tag, in case the component is a `transition-group`
   */
  tag: {
    default: "span",
    type: String
  }
};
var v = (o) => ({
  ...A,
  ...o || {}
});
var T = (o) => o.tag;
var j = defineComponent({
  __name: "CollapseTransition",
  props: v(),
  emits: g(),
  setup(o, { emit: n }) {
    const e = o, a = y(e), l = T(e), r = {
      onAfterEnter(t) {
        t.style.transition = "", t.style.height = "", t.style.overflow = t.dataset.oldOverflow, n("after-enter", t);
      },
      onAfterLeave(t) {
        t.style.transition = "", t.style.height = "", t.style.overflow = t.dataset.oldOverflow, t.style.paddingTop = t.dataset.oldPaddingTop, t.style.paddingBottom = t.dataset.oldPaddingBottom, n("after-leave", t);
      },
      onBeforeEnter(t) {
        var b;
        const $ = ((b = e.duration) == null ? void 0 : b.enter) ?? e.duration ?? 0;
        t.style.transition = s($), t.dataset || (t.dataset = {}), t.dataset.oldPaddingTop = t.style.paddingTop, t.dataset.oldPaddingBottom = t.style.paddingBottom, t.style.height = "0", t.style.paddingTop = 0, t.style.paddingBottom = 0, S(e, t), n("before-enter", t);
      },
      onBeforeLeave(t) {
        t.dataset || (t.dataset = {}), t.dataset.oldPaddingTop = t.style.paddingTop, t.dataset.oldPaddingBottom = t.style.paddingBottom, t.dataset.oldOverflow = t.style.overflow, t.style.height = `${t.scrollHeight}px`, t.style.overflow = "hidden", S(e, t), n("before-leave", t);
      },
      onEnter(t) {
        t.dataset.oldOverflow = t.style.overflow, t.scrollHeight !== 0 ? (t.style.height = `${t.scrollHeight}px`, t.style.paddingTop = t.dataset.oldPaddingTop, t.style.paddingBottom = t.dataset.oldPaddingBottom) : (t.style.height = "", t.style.paddingTop = t.dataset.oldPaddingTop, t.style.paddingBottom = t.dataset.oldPaddingBottom), t.style.overflow = "hidden";
      },
      onLeave(t, $) {
        const b = e.duration.leave ?? e.duration ?? 0;
        t.scrollHeight !== 0 && (t.style.transition = s(b), t.style.height = 0, t.style.paddingTop = 0, t.style.paddingBottom = 0), O(e, t), P(e, t, $), n("leave", t, $);
      }
    }, s = (t) => {
      const $ = t / 1e3;
      return `${$}s height ease-in-out, ${$}s padding-top ease-in-out, ${$}s padding-bottom ease-in-out`;
    };
    return (t, $) => (openBlock(), createBlock(resolveDynamicComponent(unref(a)), mergeProps({ tag: unref(l) }, { ...t.$attrs, ...r }, { "move-class": "collapse-move" }), {
      default: withCtx(() => [
        renderSlot(t.$slots, "default")
      ]),
      _: 3
    }, 16, ["tag"]));
  }
});
var k = {
  inheritAttrs: false
};
var C = defineComponent({
  ...k,
  __name: "FadeTransition",
  props: v(),
  emits: g(),
  setup(o, { emit: n }) {
    const e = o, a = y(e), l = T(e), r = h(e, n);
    return (s, t) => (openBlock(), createBlock(resolveDynamicComponent(unref(a)), mergeProps({
      tag: unref(l),
      "enter-active-class": "fade-in",
      "move-class": "fade-move",
      "leave-active-class": "fade-out"
    }, { ...s.$attrs, ...unref(r) }), {
      default: withCtx(() => [
        renderSlot(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["tag"]));
  }
});
var X = {
  origin: {
    default: "top left",
    type: String
  },
  styles: {
    default: () => ({
      animationFillMode: "both",
      animationTimingFunction: "cubic-bezier(.25,.8,.50,1)"
    }),
    type: Object
  }
};
var Y = {
  inheritAttrs: false
};
var x = defineComponent({
  ...Y,
  __name: "ScaleTransition",
  props: v(X),
  emits: g(),
  setup(o, { emit: n }) {
    const e = o, a = y(e), l = T(e), r = h(e, n);
    return (s, t) => (openBlock(), createBlock(resolveDynamicComponent(unref(a)), mergeProps({ tag: unref(l) }, { ...s.$attrs, ...unref(r) }, {
      "enter-active-class": "scale-in",
      "move-class": "scale-move",
      "leave-active-class": "scale-out"
    }), {
      default: withCtx(() => [
        renderSlot(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["tag"]));
  }
});
var L = {
  styles: {
    default: () => ({
      animationFillMode: "both",
      animationTimingFunction: "cubic-bezier(.25,.8,.50,1)"
    }),
    type: Object
  }
};
var E = {
  inheritAttrs: false
};
var M = defineComponent({
  ...E,
  __name: "SlideXLeftTransition",
  props: v(L),
  emits: g(),
  setup(o, { emit: n }) {
    const e = o, a = y(e), l = T(e), r = h(e, n);
    return (s, t) => (openBlock(), createBlock(resolveDynamicComponent(unref(a)), mergeProps({ tag: unref(l) }, { ...s.$attrs, ...unref(r) }, {
      "enter-active-class": "slide-x-left-in",
      "move-class": "slide-move",
      "leave-active-class": "slide-x-left-out"
    }), {
      default: withCtx(() => [
        renderSlot(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["tag"]));
  }
});
var U = {
  styles: {
    default: () => ({
      animationFillMode: "both",
      animationTimingFunction: "cubic-bezier(.25,.8,.50,1)"
    }),
    type: Object
  }
};
var H = {
  inheritAttrs: false
};
var R = defineComponent({
  ...H,
  __name: "SlideXRightTransition",
  props: v(U),
  emits: g(),
  setup(o, { emit: n }) {
    const e = o, a = y(e), l = T(e), r = h(e, n);
    return (s, t) => (openBlock(), createBlock(resolveDynamicComponent(unref(a)), mergeProps({ tag: unref(l) }, { ...s.$attrs, ...unref(r) }, {
      "enter-active-class": "slide-x-right-in",
      "move-class": "slide-move",
      "leave-active-class": "slide-x-right-out"
    }), {
      default: withCtx(() => [
        renderSlot(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["tag"]));
  }
});
var I = {
  styles: {
    default: () => ({
      animationFillMode: "both",
      animationTimingFunction: "cubic-bezier(.25,.8,.50,1)"
    }),
    type: Object
  }
};
var V = {
  inheritAttrs: false
};
var N = defineComponent({
  ...V,
  __name: "SlideYDownTransition",
  props: v(I),
  emits: g(),
  setup(o, { emit: n }) {
    const e = o, a = y(e), l = T(e), r = h(e, n);
    return (s, t) => (openBlock(), createBlock(resolveDynamicComponent(unref(a)), mergeProps({ tag: unref(l) }, { ...s.$attrs, ...unref(r) }, {
      "enter-active-class": "slide-y-down-in",
      "leave-active-class": "slide-y-down-out"
    }), {
      default: withCtx(() => [
        renderSlot(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["tag"]));
  }
});
var G = {
  styles: {
    default: () => ({
      animationFillMode: "both",
      animationTimingFunction: "cubic-bezier(.25,.8,.50,1)"
    }),
    type: Object
  }
};
var q = {
  inheritAttrs: false
};
var J = defineComponent({
  ...q,
  __name: "SlideYUpTransition",
  props: v(G),
  emits: g(),
  setup(o, { emit: n }) {
    const e = o, a = y(e), l = T(e), r = h(e, n);
    return (s, t) => (openBlock(), createBlock(resolveDynamicComponent(unref(a)), mergeProps({
      tag: unref(l),
      type: "animation"
    }, { ...s.$attrs, ...unref(r) }, {
      "enter-active-class": "slide-y-in",
      "move-class": "slide-move",
      "leave-active-class": "slide-y-out"
    }), {
      default: withCtx(() => [
        renderSlot(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["tag"]));
  }
});
var K = {
  inheritAttrs: false
};
var Q = defineComponent({
  ...K,
  __name: "ZoomCenterTransition",
  props: v(),
  emits: g(),
  setup(o, { emit: n }) {
    const e = o, a = y(e), l = T(e), r = h(e, n);
    return (s, t) => (openBlock(), createBlock(resolveDynamicComponent(unref(a)), mergeProps({ tag: unref(l) }, { ...s.$attrs, ...unref(r) }, {
      "enter-active-class": "zoom-in",
      "move-class": "zoom-move",
      "leave-active-class": "zoom-out"
    }), {
      default: withCtx(() => [
        renderSlot(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["tag"]));
  }
});
var W = {
  styles: {
    default: () => ({
      animationFillMode: "both",
      animationTimingFunction: "ease-out"
    }),
    type: Object
  }
};
var tt = {
  inheritAttrs: false
};
var et = defineComponent({
  ...tt,
  __name: "ZoomUpTransition",
  props: v(W),
  emits: g(),
  setup(o, { emit: n }) {
    const e = o, a = y(e), l = T(e), r = h(e, n);
    return (s, t) => (openBlock(), createBlock(resolveDynamicComponent(unref(a)), mergeProps({ tag: unref(l) }, { ...s.$attrs, ...unref(r) }, {
      "enter-active-class": "zoom-in-up",
      "move-class": "zoom-move",
      "leave-active-class": "zoom-out-up"
    }), {
      default: withCtx(() => [
        renderSlot(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["tag"]));
  }
});
var ot = {
  styles: {
    default: () => ({
      animationFillMode: "both",
      animationTimingFunction: "cubic-bezier(.55,0,.1,1)"
    }),
    type: Object
  }
};
var nt = {
  inheritAttrs: false
};
var st = defineComponent({
  ...nt,
  __name: "ZoomXTransition",
  props: v(ot),
  emits: g(),
  setup(o, { emit: n }) {
    const e = o, a = y(e), l = T(e), r = h(e, n);
    return (s, t) => (openBlock(), createBlock(resolveDynamicComponent(unref(a)), mergeProps({
      tag: unref(l),
      "enter-active-class": "zoom-in-x",
      "move-class": "zoom-move",
      "leave-active-class": "zoom-out-x"
    }, { ...s.$attrs, ...unref(r) }), {
      default: withCtx(() => [
        renderSlot(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["tag"]));
  }
});
var at = {
  styles: {
    default: () => ({
      animationFillMode: "both",
      animationTimingFunction: "cubic-bezier(.55,0,.1,1)"
    }),
    type: Object
  }
};
var it = {
  inheritAttrs: false
};
var rt = defineComponent({
  ...it,
  __name: "ZoomYTransition",
  props: v(at),
  emits: g(),
  setup(o, { emit: n }) {
    const e = o, a = y(e), l = T(e), r = h(e, n);
    return (s, t) => (openBlock(), createBlock(resolveDynamicComponent(unref(a)), mergeProps({
      tag: unref(l),
      "enter-active-class": "zoom-in-y",
      "move-class": "zoom-move",
      "leave-active-class": "zoom-out-y"
    }, { ...s.$attrs, ...unref(r) }), {
      default: withCtx(() => [
        renderSlot(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["tag"]));
  }
});
var lt = {
  CollapseTransition: j,
  FadeTransition: C,
  ScaleTransition: x,
  SlideXLeftTransition: M,
  SlideXRightTransition: R,
  SlideYDownTransition: N,
  SlideYUpTransition: J,
  ZoomCenterTransition: Q,
  ZoomUpTransition: et,
  ZoomXTransition: st,
  ZoomYTransition: rt
};
function ct(o) {
  o.$_v3SFCTransitionsInstalled || (o.$_v3SFCTransitionsInstalled = true, Object.entries(lt).forEach(
    ([n, e]) => o.component(n, e)
  ));
}
var ut = {
  install: ct
};
export {
  j as CollapseTransition,
  C as FadeTransition,
  x as ScaleTransition,
  M as SlideXLeftTransition,
  R as SlideXRightTransition,
  N as SlideYDownTransition,
  J as SlideYUpTransition,
  Q as ZoomCenterTransition,
  et as ZoomUpTransition,
  st as ZoomXTransition,
  rt as ZoomYTransition,
  ut as default,
  ct as install
};
//# sourceMappingURL=@noction_vue-bezier.js.map
